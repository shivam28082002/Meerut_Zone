# Generated by Django 5.0.6 on 2024-05-17 07:53

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='files/')),
                ('address', models.CharField(max_length=1000)),
                ('category', models.CharField(choices=[('ICIC', 'ICIC'), ('SBI', 'SBI'), ('HDFC', 'HDFC'), ('AXIS', 'AXIS'), ('BOB', 'BOB'), ('BOI', 'BOI'), ('ATM', 'ATM')], max_length=200)),
                ('loction', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Cafes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='files/')),
                ('address', models.CharField(max_length=1000)),
                ('category', models.CharField(choices=[('Chinese', 'Chinese'), ('North Indian', 'North Indian'), ('Food Franchise', 'Food Franchise'), ('Food Court', 'Food Court'), ('Family Restaurant', 'Family Restaurant')], max_length=200)),
                ('loction', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='files/')),
                ('address', models.CharField(max_length=1000)),
                ('category', models.CharField(choices=[('Pre-school', 'Pre-school'), ('Govt-School', 'Govt-School'), ('CBSE Board School', 'CBSE Board School'), ('ICSE Board School', 'ICSE Board School'), ('E&M Colleges', 'E&M Colleges'), ('Pharmacy college', 'Pharmacy college')], max_length=200)),
                ('loction', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='files/')),
                ('address', models.CharField(max_length=1000)),
                ('category', models.CharField(choices=[('Nursing homes', 'Nursing homes'), ('Psychiatric hospitals', 'Psychiatric hospitals'), ('EYE hospitals', 'EYE hospitals'), ('Blood banks', 'Blood banks'), ('General Medical & Surgical Hospitals', 'General Medical & Surgical Hospitals'), ('Neurology', 'Neurology')], max_length=200)),
                ('loction', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Park',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='files/')),
                ('address', models.CharField(max_length=1000)),
                ('category', models.CharField(choices=[('KIDS', 'KIDS'), ('CRICKET_GROUND', 'CRICKET GROUND'), ('Football_GROUND', 'Football GROUND')], max_length=200)),
                ('loction', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Shopping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='files/')),
                ('address', models.CharField(max_length=1000)),
                ('category', models.CharField(choices=[('Malls', 'Malls'), ('Grocery', 'Grocery'), ('Outlets', 'Outlets'), ('PUMA', 'PUMA'), ('REDTAPE', 'REDTAPE')], max_length=200)),
                ('loction', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, choices=[('', '----Select Gender----'), ('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
